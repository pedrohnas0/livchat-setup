---
# Traefik Deployment Playbook for LivChat
# Based on SetupOrion Traefik configuration

- name: Deploy Traefik Reverse Proxy
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    network_name: "{{ swarm_network | default('livchat_network') }}"
    email_ssl: "{{ ssl_email | default('admin@example.com') }}"
    traefik_version: "v3.2.3"
    stack_name: "traefik"

  tasks:
    - name: Ensure Docker Swarm is active
      command: docker info --format '{% raw %}{{.Swarm.LocalNodeState}}{% endraw %}'
      register: swarm_check
      changed_when: false
      failed_when: swarm_check.stdout != "active"

    - name: Create Traefik directory
      file:
        path: /root/traefik
        state: directory
        mode: '0755'

    - name: Generate Traefik stack configuration
      copy:
        content: |
          version: "3.7"
          services:

          ## --------------------------- LIVCHAT --------------------------- ##

            traefik:
              image: traefik:{{ traefik_version }}
              command:
                - "--api.dashboard=true"
                - "--providers.swarm=true"
                - "--providers.docker.endpoint=unix:///var/run/docker.sock"
                - "--providers.docker.exposedbydefault=false"
                - "--providers.docker.network={{ network_name }}"
                - "--entrypoints.web.address=:80"
                - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
                - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
                - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
                - "--entrypoints.websecure.address=:443"
                - "--entrypoints.web.transport.respondingTimeouts.idleTimeout=3600"
                - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge=true"
                - "--certificatesresolvers.letsencryptresolver.acme.httpchallenge.entrypoint=web"
                - "--certificatesresolvers.letsencryptresolver.acme.storage=/etc/traefik/letsencrypt/acme.json"
                - "--certificatesresolvers.letsencryptresolver.acme.email={{ email_ssl }}"
                - "--log.level=INFO"
                - "--log.format=common"
                - "--log.filePath=/var/log/traefik/traefik.log"
                - "--accesslog=true"
                - "--accesslog.filepath=/var/log/traefik/access-log"

              volumes:
                - "vol_certificates:/etc/traefik/letsencrypt"
                - "/var/run/docker.sock:/var/run/docker.sock:ro"

              networks:
                - {{ network_name }}

              ports:
                - target: 80
                  published: 80
                  mode: host
                - target: 443
                  published: 443
                  mode: host

              deploy:
                placement:
                  constraints:
                    - node.role == manager
                labels:
                  - "traefik.enable=true"
                  - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
                  - "traefik.http.middlewares.redirect-https.redirectscheme.permanent=true"
                  - "traefik.http.routers.http-catchall.rule=Host(`{host:.+}`)"
                  - "traefik.http.routers.http-catchall.entrypoints=web"
                  - "traefik.http.routers.http-catchall.middlewares=redirect-https@docker"
                  - "traefik.http.routers.http-catchall.priority=1"

          ## --------------------------- LIVCHAT --------------------------- ##

          volumes:
            vol_shared:
              external: true
              name: volume_swarm_shared
            vol_certificates:
              external: true
              name: volume_swarm_certificates

          networks:
            {{ network_name }}:
              external: true
              attachable: true
              name: {{ network_name }}
        dest: /root/traefik/traefik.yaml
        mode: '0644'

    - name: Deploy Traefik stack
      command: docker stack deploy --prune --resolve-image always -c /root/traefik/traefik.yaml {{ stack_name }}
      register: traefik_deploy
      retries: 3
      delay: 10
      until: traefik_deploy is succeeded

    - name: Wait for Traefik to be running
      command: docker service ls --filter name={{ stack_name }}_traefik --format '{% raw %}{{.Replicas}}{% endraw %}'
      register: traefik_status
      until: "'1/1' in traefik_status.stdout"
      retries: 30
      delay: 10
      changed_when: false

    - name: Check Traefik service status
      command: docker service ps {{ stack_name }}_traefik --format '{% raw %}table {{.Name}}\t{{.CurrentState}}{% endraw %}'
      register: service_status
      changed_when: false

    - name: Display Traefik deployment info
      debug:
        msg: |
          âœ… Traefik deployed successfully!
          Stack Name: {{ stack_name }}
          Network: {{ network_name }}
          SSL Email: {{ email_ssl }}
          Version: {{ traefik_version }}

          Service Status:
          {{ service_status.stdout }}

          Traefik is now running and handling SSL certificates via Let's Encrypt.
          HTTP (80) traffic will be automatically redirected to HTTPS (443).