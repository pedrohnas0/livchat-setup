name: redis
category: database
version: "7-alpine"
description: Redis in-memory data structure store

# Method determines deployment flow
deploy_method: portainer

ports:
  - "6379:6379"

volumes:
  - redis_data:/data

environment:
  - REDIS_PASSWORD={{ vault.redis_password }}

command: redis-server --requirepass {{ vault.redis_password }} --appendonly yes

deploy:
  mode: replicated
  replicas: 1
  placement:
    constraints:
      - node.role == manager
  resources:
    limits:
      memory: 512M
    reservations:
      memory: 128M

health_check:
  test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 20s

dependencies:
  - infrastructure  # Requires Traefik (reverse proxy) + Portainer (deployment)

dns_prefix: rds

labels:
  - "com.livchat.app=redis"
  - "com.livchat.category=database"

network: livchat_network

backup:
  enabled: true
  schedule: "0 3 * * *"  # Daily at 3 AM
  retention: 7  # Keep 7 days of backups
  command: |
    redis-cli --rdb /data/dump_$(date +%Y%m%d_%H%M%S).rdb BGSAVE

# Docker Compose Stack section (for portainer deployment)
compose_template: |
  version: '3.8'
  services:
    redis:
      image: redis:7-alpine
      command: ["redis-server", "--appendonly", "yes", "--port", "6379"]
      ports:
        - "6379:6379"
      volumes:
        - redis_data:/data
      deploy:
        mode: replicated
        replicas: 1
        placement:
          constraints:
            - node.role == manager
        resources:
          limits:
            memory: 512M
          reservations:
            memory: 128M
      healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 30s
        timeout: 10s
        retries: 3
        start_period: 20s
      networks:
        - livchat_network

  volumes:
    redis_data:
      external: true
      name: redis_data

  networks:
    livchat_network:
      external: true
      name: livchat_network